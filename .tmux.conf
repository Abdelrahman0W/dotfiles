# timeout setting
set -sg escape-time 0

# 0 is too far from ` ;)
set -g base-index 1

# statusbar setup
set-option -g status-position top
set -g status-left ''
set -g status-right '[#S]'

# automatically set window title
# set-window-option -g automatic-rename on
# set-option -g set-titles on
# set-window-option -g automatic-rename off
# set-option -g allow-rename off

set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 32768

setw -g xterm-keys on
setw -g mode-keys vi

set -g monitor-activity on;


# Keyboard shortcuts for window navigation
bind -n M-e split-window -h -c "#{pane_current_path}"
bind -n M-o split-window -v -c "#{pane_current_path}"

bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-H resize-pane -L 5
bind -n M-L resize-pane -R 5

# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# bind -n M-h select-pane -L
# bind -n M-l select-pane -R
# bind -n M-k select-pane -U
# bind -n M-j select-pane -D

# smart pane switching with awareness of vim splits
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-h) || tmux select-pane -L; exit 0"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-j) || tmux select-pane -D; exit 0"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-k) || tmux select-pane -U; exit 0"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-l) || tmux select-pane -R; exit 0"
bind -n M-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'M-\\') || tmux select-pane -l; exit 0"

bind -n M-n next-window
bind -n M-p previous-window
bind -n M-N swap-window -t +1
bind -n M-P swap-window -t -1
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-w confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind -n M-r command-prompt 'rename-window %%'
bind -n M-R command-prompt 'rename-session %%'


# Keyboard shortcuts for loading script
# reload tmux config
bind r source-file ~/.tmux.conf

# script set up
bind D source-file ~/.tmux/dev

if-shell "uname | grep -q Darwin" "source-file ~/.tmux/osx" "source-file ~/.tmux/linux"

